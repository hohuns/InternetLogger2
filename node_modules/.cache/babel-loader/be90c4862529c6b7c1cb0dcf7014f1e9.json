{"ast":null,"code":"var _jsxFileName = \"/Users/sungjaejoo/Desktop/Protek/\\u110B\\u1167\\u11AB\\u1109\\u1173\\u11B8\\u1111\\u1161\\u110B\\u1175\\u11AF/Web/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173 \\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/InterLogger/src/App.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport NoteListS from \"./components/NoteListSarah\";\nimport NoteListF from \"./components/NoteListF\";\nimport AddNoteS from \"./components/AddNoteSarah\";\nimport AddNoteF from \"./components/AddNoteF\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\n\nfunction App() {\n  const [note, setNote] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [mode, setMode] = useState(false);\n  const [error, setError] = useState(null);\n  const logindb = [{\n    name: \"아버지\",\n    id: \"19687663\",\n    pw: \"19687663\",\n    mode: \"F\"\n  }, {\n    name: \"어머니\",\n    id: \"19757663\",\n    pw: \"19757663\",\n    mode: \"F\"\n  }, {\n    name: \"성재\",\n    id: \"19957663\",\n    pw: \"19957663\",\n    mode: \"F\"\n  }, {\n    name: \"은지\",\n    id: \"19967663\",\n    pw: \"19967663\",\n    mode: \"F\"\n  }, {\n    name: \"Sarah\",\n    id: \"sarah0623\",\n    pw: \"sarah0623\",\n    mode: \"S\"\n  }];\n  const fetchNoteHandlerS = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://react-http-2887f-default-rtdb.firebaseio.com/notes.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      const loadedNotes = [];\n\n      for (const key in data) {\n        loadedNotes.push({\n          id: key,\n          title: data[key].title,\n          text: data[key].text,\n          date: data[key].date\n        });\n      }\n\n      console.log(loadedNotes);\n      setNote(loadedNotes);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  const fetchNoteHandlerF = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://react-http-2887f-default-rtdb.firebaseio.com/notesf.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      const loadedNotes = [];\n\n      for (const key in data) {\n        loadedNotes.push({\n          id: key,\n          title: data[key].title,\n          text: data[key].text,\n          date: data[key].date\n        });\n      }\n\n      console.log(loadedNotes);\n      setNote(loadedNotes);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchNoteHandlerS();\n    fetchNoteHandlerF();\n  }, [fetchNoteHandlerS, fetchNoteHandlerF]);\n\n  const formHandler = _ref => {\n    let {\n      id,\n      pw\n    } = _ref;\n    console.log(id, pw);\n\n    for (const data of logindb) {\n      if (id === data.id && pw === data.pw && id) {\n        setIsCorrect(true);\n\n        if (data.mode === \"F\") {\n          setMode(true);\n        }\n      }\n    }\n\n    async function addNoteHandlerS(note) {\n      const response = await fetch(\"https://react-http-2887f-default-rtdb.firebaseio.com/notes.json\", {\n        method: \"POST\",\n        body: JSON.stringify(note),\n        headers: {\n          \"Content-Type\": \"appication/json\"\n        }\n      });\n      const data = await response.json();\n      console.log(data);\n    }\n\n    async function addNoteHandlerF(note) {\n      const response = await fetch(\"https://react-http-2887f-default-rtdb.firebaseio.com/notesf.json\", {\n        method: \"POST\",\n        body: JSON.stringify(note),\n        headers: {\n          \"Content-Type\": \"appication/json\"\n        }\n      });\n      const data = await response.json();\n      console.log(data);\n    }\n\n    let content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, \"Found no Notes.\");\n\n    if (note.length > 0) {\n      content = /*#__PURE__*/React.createElement(NoteListS, {\n        note: note,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      });\n    }\n\n    if (error) {\n      content = /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, error);\n    }\n\n    if (isLoading) {\n      content = /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }, \"Loading...\");\n    }\n\n    isCorrectS ? /*#__PURE__*/React.createElement(Login, {\n      form: formHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, \"Log Format\")), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, \"Log\"), content));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Login, {\n      form: formHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }), isCorrect && mode ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, \"Log Format\")), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, \"Log\"), content)) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, \"Log Format\")), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, \"Log\"), content)));\n  };\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/Protek/연습파일/Web/리액트/리액트 프로젝트/InterLogger/src/App.js"],"names":["React","useState","useEffect","useCallback","NoteListS","NoteListF","AddNoteS","AddNoteF","Login","App","note","setNote","isLoading","setIsLoading","isCorrect","setIsCorrect","mode","setMode","error","setError","logindb","name","id","pw","fetchNoteHandlerS","response","fetch","ok","Error","data","json","loadedNotes","key","push","title","text","date","console","log","message","fetchNoteHandlerF","formHandler","addNoteHandlerS","method","body","JSON","stringify","headers","addNoteHandlerF","content","length","isCorrectS","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nimport NoteListS from \"./components/NoteListSarah\";\nimport NoteListF from \"./components/NoteListF\";\nimport AddNoteS from \"./components/AddNoteSarah\";\nimport AddNoteF from \"./components/AddNoteF\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\nfunction App() {\n  const [note, setNote] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [mode, setMode] = useState(false);\n  const [error, setError] = useState(null);\n  const logindb = [\n    { name: \"아버지\", id: \"19687663\", pw: \"19687663\", mode: \"F\" },\n    { name: \"어머니\", id: \"19757663\", pw: \"19757663\", mode: \"F\" },\n    { name: \"성재\", id: \"19957663\", pw: \"19957663\", mode: \"F\" },\n    { name: \"은지\", id: \"19967663\", pw: \"19967663\", mode: \"F\" },\n    { name: \"Sarah\", id: \"sarah0623\", pw: \"sarah0623\", mode: \"S\" },\n  ];\n\n  const fetchNoteHandlerS = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://react-http-2887f-default-rtdb.firebaseio.com/notes.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      const loadedNotes = [];\n      for (const key in data) {\n        loadedNotes.push({\n          id: key,\n          title: data[key].title,\n          text: data[key].text,\n          date: data[key].date,\n        });\n      }\n\n      console.log(loadedNotes);\n      setNote(loadedNotes);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  const fetchNoteHandlerF = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://react-http-2887f-default-rtdb.firebaseio.com/notesf.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      const loadedNotes = [];\n      for (const key in data) {\n        loadedNotes.push({\n          id: key,\n          title: data[key].title,\n          text: data[key].text,\n          date: data[key].date,\n        });\n      }\n\n      console.log(loadedNotes);\n      setNote(loadedNotes);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchNoteHandlerS();\n    fetchNoteHandlerF();\n  }, [fetchNoteHandlerS, fetchNoteHandlerF]);\n\n  const formHandler = ({ id, pw }) => {\n    console.log(id, pw);\n    for (const data of logindb) {\n      if (id === data.id && pw === data.pw && id) {\n        setIsCorrect(true);\n        if (data.mode === \"F\") {\n          setMode(true);\n        }\n      }\n    }\n    async function addNoteHandlerS(note) {\n      const response = await fetch(\n        \"https://react-http-2887f-default-rtdb.firebaseio.com/notes.json\",\n        {\n          method: \"POST\",\n          body: JSON.stringify(note),\n          headers: {\n            \"Content-Type\": \"appication/json\",\n          },\n        }\n      );\n      const data = await response.json();\n      console.log(data);\n    }\n\n    async function addNoteHandlerF(note) {\n      const response = await fetch(\n        \"https://react-http-2887f-default-rtdb.firebaseio.com/notesf.json\",\n        {\n          method: \"POST\",\n          body: JSON.stringify(note),\n          headers: {\n            \"Content-Type\": \"appication/json\",\n          },\n        }\n      );\n      const data = await response.json();\n      console.log(data);\n    }\n\n    let content = <p>Found no Notes.</p>;\n\n    if (note.length > 0) {\n      content = <NoteListS note={note} />;\n    }\n\n    if (error) {\n      content = <p>{error}</p>;\n    }\n\n    if (isLoading) {\n      content = <p>Loading...</p>;\n    }\n\n    isCorrectS ? (\n      <Login form={formHandler}></Login>\n    ) : (\n      <div>\n        <section>\n          <h2 style={{ color: \"white\" }}>Log Format</h2>\n          {/* <AddNoteS AddNote={addNoteHandler}></AddNoteS> */}\n        </section>\n        <section>\n          {/* <button onClick={fetchNoteHandler}>Update Notes</button> */}\n        </section>\n        <section>\n          <h2 style={{ color: \"white\" }}>Log</h2>\n          {content}\n        </section>\n      </div>\n    );\n\n    return (\n      <>\n        <Login form={formHandler}></Login>\n        {isCorrect && mode ? (\n          <div>\n            <section>\n              <h2 style={{ color: \"white\" }}>Log Format</h2>\n              {/* <AddNoteS AddNote={addNoteHandler}></AddNoteS> */}\n            </section>\n            <section>\n              {/* <button onClick={fetchNoteHandler}>Update Notes</button> */}\n            </section>\n            <section>\n              <h2 style={{ color: \"white\" }}>Log</h2>\n              {content}\n            </section>\n          </div>\n        ) : (\n          <div>\n            <section>\n              <h2 style={{ color: \"white\" }}>Log Format</h2>\n              {/* <AddNoteS AddNote={addNoteHandler}></AddNoteS> */}\n            </section>\n            <section>\n              {/* <button onClick={fetchNoteHandler}>Update Notes</button> */}\n            </section>\n            <section>\n              <h2 style={{ color: \"white\" }}>Log</h2>\n              {content}\n            </section>\n          </div>\n        )}\n      </>\n    );\n  };\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}