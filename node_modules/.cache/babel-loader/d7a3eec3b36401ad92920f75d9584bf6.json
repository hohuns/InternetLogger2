{"ast":null,"code":"import React,{useEffect}from\"react\";import{Routes,Route,Navigate}from\"react-router-dom\";import\"./App.css\";import Login from\"./pages/Login\";import Layout from\"./components/Layout/Layout\";import MessageLogEn from\"./pages/MessageLogEn\";import MessageLogKr from\"./pages/MessageLogKr\";import SignIn from\"./pages/SignIn\";import ChangePassword from\"./pages/ChangePassword\";import HomePageEn from\"./pages/HomePageEn\";import HomePageKr from\"./pages/HomePageKr\";import ChangeUserName from\"./pages/ChangeUserName\";import InitialPage from\"./pages/InitialPage\";import{useSelector,useDispatch}from\"react-redux\";import{usersActions}from\"./store/userSlice\";function App(){var reduxIsLoggedIn=useSelector(function(state){return state.isLoggedIn;});var dispatch=useDispatch();var storedToken=localStorage.getItem(\"token\");var storedIsLoggedIn=localStorage.getItem(\"isLoggedIn\");var storedUser=localStorage.getItem(\"user\");useEffect(function(){if(storedIsLoggedIn){dispatch(usersActions.updateIdToken(storedToken));dispatch(usersActions.updateUser(storedUser));dispatch(usersActions.updateIsLoggedIn(storedIsLoggedIn));}},[storedToken,storedIsLoggedIn,storedUser]);return/*#__PURE__*/React.createElement(Layout,null,/*#__PURE__*/React.createElement(Routes,null,storedIsLoggedIn?/*#__PURE__*/React.createElement(Route,{path:\"*\",element:/*#__PURE__*/React.createElement(Navigate,{to:\"/initialpage\"})}):/*#__PURE__*/React.createElement(Route,{path:\"*\",element:/*#__PURE__*/React.createElement(Navigate,{to:\"/login\"})}),!storedIsLoggedIn&&/*#__PURE__*/React.createElement(Route,{path:\"/login\",element:/*#__PURE__*/React.createElement(Login,null)}),storedIsLoggedIn&&/*#__PURE__*/React.createElement(Route,{path:\"/initialpage\",element:/*#__PURE__*/React.createElement(InitialPage,null)}),!storedIsLoggedIn&&/*#__PURE__*/React.createElement(Route,{path:\"/signin\",element:/*#__PURE__*/React.createElement(SignIn,null)}),reduxIsLoggedIn&&/*#__PURE__*/React.createElement(Route,{path:\"/msglogen\",element:/*#__PURE__*/React.createElement(MessageLogEn,null)}),reduxIsLoggedIn&&/*#__PURE__*/React.createElement(Route,{path:\"/msglogkr\",element:/*#__PURE__*/React.createElement(MessageLogKr,null)}),reduxIsLoggedIn&&/*#__PURE__*/React.createElement(Route,{path:\"/hompageen\",element:/*#__PURE__*/React.createElement(HomePageEn,null)}),reduxIsLoggedIn&&/*#__PURE__*/React.createElement(Route,{path:\"/hompagekr\",element:/*#__PURE__*/React.createElement(HomePageKr,null)}),reduxIsLoggedIn&&/*#__PURE__*/React.createElement(Route,{path:\"/updateusername\",element:/*#__PURE__*/React.createElement(ChangeUserName,null)}),reduxIsLoggedIn&&/*#__PURE__*/React.createElement(Route,{path:\"/changepassword\",element:/*#__PURE__*/React.createElement(ChangePassword,null)})));}export default App;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/InterLogger Version2/src/App.js"],"names":["React","useEffect","Routes","Route","Navigate","Login","Layout","MessageLogEn","MessageLogKr","SignIn","ChangePassword","HomePageEn","HomePageKr","ChangeUserName","InitialPage","useSelector","useDispatch","usersActions","App","reduxIsLoggedIn","state","isLoggedIn","dispatch","storedToken","localStorage","getItem","storedIsLoggedIn","storedUser","updateIdToken","updateUser","updateIsLoggedIn"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport \"./App.css\";\nimport Login from \"./pages/Login\";\nimport Layout from \"./components/Layout/Layout\";\nimport MessageLogEn from \"./pages/MessageLogEn\";\nimport MessageLogKr from \"./pages/MessageLogKr\";\nimport SignIn from \"./pages/SignIn\";\nimport ChangePassword from \"./pages/ChangePassword\";\nimport HomePageEn from \"./pages/HomePageEn\";\nimport HomePageKr from \"./pages/HomePageKr\";\nimport ChangeUserName from \"./pages/ChangeUserName\";\nimport InitialPage from \"./pages/InitialPage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { usersActions } from \"./store/userSlice\";\n\nfunction App() {\n  const reduxIsLoggedIn = useSelector((state) => state.isLoggedIn);\n  const dispatch = useDispatch();\n  const storedToken = localStorage.getItem(\"token\");\n  const storedIsLoggedIn = localStorage.getItem(\"isLoggedIn\");\n  const storedUser = localStorage.getItem(\"user\");\n\n  useEffect(() => {\n    if (storedIsLoggedIn) {\n      dispatch(usersActions.updateIdToken(storedToken));\n      dispatch(usersActions.updateUser(storedUser));\n      dispatch(usersActions.updateIsLoggedIn(storedIsLoggedIn));\n    }\n  }, [storedToken, storedIsLoggedIn, storedUser]);\n\n  return (\n    <Layout>\n      <Routes>\n        {storedIsLoggedIn ? (\n          <Route path=\"*\" element={<Navigate to=\"/initialpage\" />} />\n        ) : (\n          <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n        )}\n        {!storedIsLoggedIn && <Route path=\"/login\" element={<Login></Login>} />}\n        {storedIsLoggedIn && (\n          <Route path=\"/initialpage\" element={<InitialPage></InitialPage>} />\n        )}\n        {!storedIsLoggedIn && (\n          <Route path=\"/signin\" element={<SignIn></SignIn>} />\n        )}\n        {reduxIsLoggedIn && (\n          <Route path=\"/msglogen\" element={<MessageLogEn></MessageLogEn>} />\n        )}\n        {reduxIsLoggedIn && (\n          <Route path=\"/msglogkr\" element={<MessageLogKr></MessageLogKr>} />\n        )}\n        {reduxIsLoggedIn && (\n          <Route path=\"/hompageen\" element={<HomePageEn></HomePageEn>} />\n        )}\n        {reduxIsLoggedIn && (\n          <Route path=\"/hompagekr\" element={<HomePageKr></HomePageKr>} />\n        )}\n        {reduxIsLoggedIn && (\n          <Route\n            path=\"/updateusername\"\n            element={<ChangeUserName></ChangeUserName>}\n          />\n        )}\n        {reduxIsLoggedIn && (\n          <Route\n            path=\"/changepassword\"\n            element={<ChangePassword></ChangePassword>}\n          />\n        )}\n      </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}