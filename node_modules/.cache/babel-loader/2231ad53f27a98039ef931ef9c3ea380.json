{"ast":null,"code":"import{createSlice,configureStore}from\"@reduxjs/toolkit\";var initialState={user:\"\",idToken:\"\",isLoggedIn:false};var userSlice=createSlice({name:\"user\",initialState:initialState,reducers:{updateUser:function updateUser(state,action){state.user=action.payload;},updateIdToken:function updateIdToken(state,action){state.idToken=action.payload;},updateIsLoggedIn:function updateIsLoggedIn(state,action){state.isLoggedIn=action.payload;}}});//Create the store\nvar store=configureStore({reducer:userSlice.reducer});export var usersActions=userSlice.actions;export default store;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/InterLogger Version2/src/store/userSlice.js"],"names":["createSlice","configureStore","initialState","user","idToken","isLoggedIn","userSlice","name","reducers","updateUser","state","action","payload","updateIdToken","updateIsLoggedIn","store","reducer","usersActions","actions"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,cAAtB,KAA4C,kBAA5C,CACA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,IAAI,CAAE,EADa,CAEnBC,OAAO,CAAE,EAFU,CAGnBC,UAAU,CAAE,KAHO,CAArB,CAMA,GAAMC,CAAAA,SAAS,CAAGN,WAAW,CAAC,CAC5BO,IAAI,CAAE,MADsB,CAE5BL,YAAY,CAAEA,YAFc,CAG5BM,QAAQ,CAAE,CACRC,UADQ,qBACGC,KADH,CACUC,MADV,CACkB,CACxBD,KAAK,CAACP,IAAN,CAAaQ,MAAM,CAACC,OAApB,CACD,CAHO,CAIRC,aAJQ,wBAIMH,KAJN,CAIaC,MAJb,CAIqB,CAC3BD,KAAK,CAACN,OAAN,CAAgBO,MAAM,CAACC,OAAvB,CACD,CANO,CAORE,gBAPQ,2BAOSJ,KAPT,CAOgBC,MAPhB,CAOwB,CAC9BD,KAAK,CAACL,UAAN,CAAmBM,MAAM,CAACC,OAA1B,CACD,CATO,CAHkB,CAAD,CAA7B,CAgBA;AACA,GAAMG,CAAAA,KAAK,CAAGd,cAAc,CAAC,CAC3Be,OAAO,CAAEV,SAAS,CAACU,OADQ,CAAD,CAA5B,CAIA,MAAO,IAAMC,CAAAA,YAAY,CAAGX,SAAS,CAACY,OAA/B,CACP,cAAeH,CAAAA,KAAf","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  user: \"\",\n  idToken: \"\",\n  isLoggedIn: false,\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: initialState,\n  reducers: {\n    updateUser(state, action) {\n      state.user = action.payload;\n    },\n    updateIdToken(state, action) {\n      state.idToken = action.payload;\n    },\n    updateIsLoggedIn(state, action) {\n      state.isLoggedIn = action.payload;\n    },\n  },\n});\n\n//Create the store\nconst store = configureStore({\n  reducer: userSlice.reducer,\n});\n\nexport const usersActions = userSlice.actions;\nexport default store;\n"]},"metadata":{},"sourceType":"module"}