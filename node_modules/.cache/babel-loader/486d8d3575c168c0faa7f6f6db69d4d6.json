{"ast":null,"code":"var _jsxFileName = \"/Users/sungjaejoo/Desktop/Protek/\\u110B\\u1167\\u11AB\\u1109\\u1173\\u11B8\\u1111\\u1161\\u110B\\u1175\\u11AF/Web/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173/react-complete-guide-code-03-react-basics-working-with-components/code/section 14-2/src/components/login.js\";\nimport { Grid, Paper, Avatar, Typography } from \"@mui/material\";\nimport LockIcon from \"@mui/icons-material/Lock\";\nimport { TextField } from \"@mui/material\";\nimport { Button } from \"@mui/material\";\nimport { Link } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../store/userSlice\";\nimport { paperStyle, avatarStyle, textStyle, btnStyle } from \"../styles/loginStyle\";\nimport { userLogin } from \"../api/loginApi\";\nimport { saveJwtToLocal } from \"../api/localStorage\";\nimport { userLoginFetch } from \"../api/loginFetchApi\";\n\nconst Login = props => {\n  //states\n  const [id, setId] = useState(\"\");\n  const navigate = useNavigate();\n  const [password, setPassword] = useState(\"\");\n  const [formIsValid, setFormIsValid] = useState(false);\n  const dispatch = useDispatch();\n  const isAuth = useSelector(select => select.isAuth);\n\n  const loginHandlerAxios = async (email, password) => {\n    try {\n      // the http request login\n      let userData = await userLoginFetch({\n        email,\n        password\n      });\n      let access_token = userData[\"access_token\"];\n\n      if (access_token) {\n        saveJwtToLocal(access_token);\n      } // set add a single action for updating these 3\n\n\n      dispatch(usersActions.updateId(id));\n      dispatch(usersActions.updatePassword(access_token));\n      dispatch(usersActions.updateIsauth(true)); //navigate to other page\n\n      navigate(\"./home\");\n    } catch (e) {\n      alert(\"login failed\");\n    }\n  };\n\n  const loginHandlerFetch = async (email, password) => {\n    try {\n      // the http request login\n      let response = await userLoginFetch({\n        email,\n        password\n      });\n      console.log(response); //Unsuccessful case\n      //Error Handling\n\n      if (!response.ok) {\n        if (response.status === 401) {\n          throw Error(\"Not authorized\");\n        } else if (response.status === 403) {\n          throw Error(\"403\");\n        }\n\n        throw new Error(response);\n      } // successful case\n      // saving accesstoken to local storage\n\n\n      let access_token = response[\"access_token\"];\n\n      if (access_token) {\n        saveJwtToLocal(access_token);\n      } // set add a single action for updating these 3\n\n\n      dispatch(usersActions.updateId(id));\n      dispatch(usersActions.updatePassword(access_token));\n      dispatch(usersActions.updateIsauth(true)); //navigate to other page\n\n      navigate(\"./home\");\n    } catch (e) {\n      alert(e);\n    }\n  };\n\n  useEffect(() => {\n    //Checking disabled whenever user type something\n    setFormIsValid(id.includes(\"@\") && password.trim().length >= 4);\n\n    if (isAuth) {\n      navigate(\"/home\");\n    }\n  }, [isAuth, id, password]); //function\n\n  const idHandler = e => {\n    setId(e.target.value);\n  };\n\n  const passwordHandler = e => {\n    setPassword(e.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      loginHandlerFetch(id, password);\n    } else {\n      alert(\"Email invalid or password length < 4\");\n    } //Sending props to parents app\n\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 10,\n    style: paperStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    style: avatarStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LockIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(TextField, {\n    style: textStyle,\n    label: \"Username\",\n    placeholder: \"Enter Username\",\n    fullWidth: true,\n    required: true,\n    onChange: idHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    style: textStyle,\n    label: \"Password\",\n    placeholder: \"Enter Password\",\n    fullWidth: true,\n    required: true,\n    type: \"password\",\n    onChange: passwordHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    fullWidth: true,\n    variant: \"contained\",\n    style: btnStyle,\n    onClick: submitHandler,\n    disabled: !formIsValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(Typography, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: \"https://www.naver.com\",\n    target: \"_blank;\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"Forgot Password?\")), /*#__PURE__*/React.createElement(Typography, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, \"Do you have an account?\", /*#__PURE__*/React.createElement(Link, {\n    href: \"https://www.naver.com\",\n    target: \"_blank;\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/Protek/연습파일/Web/리액트/react-complete-guide-code-03-react-basics-working-with-components/code/section 14-2/src/components/login.js"],"names":["Grid","Paper","Avatar","Typography","LockIcon","TextField","Button","Link","useEffect","useState","useSelector","useDispatch","useNavigate","usersActions","paperStyle","avatarStyle","textStyle","btnStyle","userLogin","saveJwtToLocal","userLoginFetch","Login","props","id","setId","navigate","password","setPassword","formIsValid","setFormIsValid","dispatch","isAuth","select","loginHandlerAxios","email","userData","access_token","updateId","updatePassword","updateIsauth","e","alert","loginHandlerFetch","response","console","log","ok","status","Error","includes","trim","length","idHandler","target","value","passwordHandler","submitHandler","event","preventDefault"],"mappings":"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","sourcesContent":["import { Grid, Paper, Avatar, Typography } from \"@mui/material\";\nimport LockIcon from \"@mui/icons-material/Lock\";\nimport { TextField } from \"@mui/material\";\nimport { Button } from \"@mui/material\";\nimport { Link } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../store/userSlice\";\nimport {\n  paperStyle,\n  avatarStyle,\n  textStyle,\n  btnStyle,\n} from \"../styles/loginStyle\";\nimport { userLogin } from \"../api/loginApi\";\nimport { saveJwtToLocal } from \"../api/localStorage\";\nimport { userLoginFetch } from \"../api/loginFetchApi\";\n\nconst Login = (props) => {\n  //states\n  const [id, setId] = useState(\"\");\n  const navigate = useNavigate();\n  const [password, setPassword] = useState(\"\");\n  const [formIsValid, setFormIsValid] = useState(false);\n  const dispatch = useDispatch();\n  const isAuth = useSelector((select) => select.isAuth);\n\n  const loginHandlerAxios = async (email, password) => {\n    try {\n      // the http request login\n      let userData = await userLoginFetch({ email, password });\n      let access_token = userData[\"access_token\"];\n      if (access_token) {\n        saveJwtToLocal(access_token);\n      }\n      // set add a single action for updating these 3\n      dispatch(usersActions.updateId(id));\n      dispatch(usersActions.updatePassword(access_token));\n      dispatch(usersActions.updateIsauth(true));\n      //navigate to other page\n      navigate(\"./home\");\n    } catch (e) {\n      alert(\"login failed\");\n    }\n  };\n\n  const loginHandlerFetch = async (email, password) => {\n    try {\n      // the http request login\n      let response = await userLoginFetch({ email, password });\n      console.log(response);\n      //Unsuccessful case\n      //Error Handling\n      if (!response.ok) {\n        if (response.status === 401) {\n          throw Error(\"Not authorized\");\n        } else if (response.status === 403) {\n          throw Error(\"403\");\n        }\n        throw new Error(response);\n      }\n      // successful case\n      // saving accesstoken to local storage\n      let access_token = response[\"access_token\"];\n      if (access_token) {\n        saveJwtToLocal(access_token);\n      }\n      // set add a single action for updating these 3\n      dispatch(usersActions.updateId(id));\n      dispatch(usersActions.updatePassword(access_token));\n      dispatch(usersActions.updateIsauth(true));\n      //navigate to other page\n      navigate(\"./home\");\n    } catch (e) {\n      alert(e);\n    }\n  };\n\n  useEffect(() => {\n    //Checking disabled whenever user type something\n    setFormIsValid(id.includes(\"@\") && password.trim().length >= 4);\n    if (isAuth) {\n      navigate(\"/home\");\n    }\n  }, [isAuth, id, password]);\n\n  //function\n  const idHandler = (e) => {\n    setId(e.target.value);\n  };\n\n  const passwordHandler = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (formIsValid) {\n      loginHandlerFetch(id, password);\n    } else {\n      alert(\"Email invalid or password length < 4\");\n    }\n    //Sending props to parents app\n  };\n\n  return (\n    <Grid align=\"center\">\n      <Paper elevation={10} style={paperStyle}>\n        <Avatar style={avatarStyle}>\n          <LockIcon></LockIcon>\n        </Avatar>\n        <h2>Sign In</h2>\n        <TextField\n          style={textStyle}\n          label=\"Username\"\n          placeholder=\"Enter Username\"\n          fullWidth\n          required\n          onChange={idHandler}\n        ></TextField>\n        <TextField\n          style={textStyle}\n          label=\"Password\"\n          placeholder=\"Enter Password\"\n          fullWidth\n          required\n          type=\"password\"\n          onChange={passwordHandler}\n        ></TextField>\n        <Button\n          type=\"submit\"\n          color=\"primary\"\n          fullWidth\n          variant=\"contained\"\n          style={btnStyle}\n          onClick={submitHandler}\n          disabled={!formIsValid}\n        >\n          Sign In\n        </Button>\n        <Typography align=\"left\">\n          <Link href=\"https://www.naver.com\" target=\"_blank;\">\n            Forgot Password?\n          </Link>\n        </Typography>\n        <Typography align=\"left\">\n          Do you have an account?\n          <Link href=\"https://www.naver.com\" target=\"_blank;\">\n            Sign Up\n          </Link>\n        </Typography>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}