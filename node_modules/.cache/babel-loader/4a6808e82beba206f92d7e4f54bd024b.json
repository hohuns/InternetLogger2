{"ast":null,"code":"var _jsxFileName = \"/Users/sungjaejoo/Desktop/InterLogger Version2/src/App.js\";\nimport React, { useEffect } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport \"./App.css\";\nimport Login from \"./pages/Login\";\nimport Layout from \"./components/Layout/Layout\";\nimport MessageLogEn from \"./pages/MessageLogEn\";\nimport MessageLogKr from \"./pages/MessageLogKr\";\nimport SignIn from \"./pages/SignIn\";\nimport ChangePassword from \"./pages/ChangePassword\";\nimport HomePageEn from \"./pages/HomePageEn\";\nimport HomePageKr from \"./pages/HomePageKr\";\nimport ChangeUserName from \"./pages/ChangeUserName\";\nimport InitialPage from \"./pages/InitialPage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { usersActions } from \"./store/userSlice\";\n\nfunction App() {\n  const reduxIsLoggedIn = useSelector(state => state.isLoggedIn);\n  const dispatch = useDispatch();\n  const storedToken = localStorage.getItem(\"token\");\n  const storedIsLoggedIn = localStorage.getItem(\"isLoggedIn\");\n  const storedUser = localStorage.getItem(\"user\");\n  useEffect(() => {\n    if (storedIsLoggedIn) {\n      dispatch(usersActions.updateIdToken(storedToken));\n      dispatch(usersActions.updateUser(storedUser));\n      dispatch(usersActions.updateIsLoggedIn(storedIsLoggedIn));\n    }\n  }, [storedToken, storedIsLoggedIn, storedUser]);\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, reduxIsLoggedIn ? /*#__PURE__*/React.createElement(Route, {\n    path: \"*\",\n    element: /*#__PURE__*/React.createElement(Navigate, {\n      to: \"/initialpage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 36\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Route, {\n    path: \"*\",\n    element: /*#__PURE__*/React.createElement(Navigate, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 36\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    element: /*#__PURE__*/React.createElement(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 39\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/initialpage\",\n    element: /*#__PURE__*/React.createElement(InitialPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 45\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/signin\",\n    element: /*#__PURE__*/React.createElement(SignIn, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 40\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), \")\", reduxIsLoggedIn && /*#__PURE__*/React.createElement(Route, {\n    path: \"/msglogen\",\n    element: /*#__PURE__*/React.createElement(MessageLogEn, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 44\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), reduxIsLoggedIn && /*#__PURE__*/React.createElement(Route, {\n    path: \"/msglogkr\",\n    element: /*#__PURE__*/React.createElement(MessageLogKr, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 44\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), reduxIsLoggedIn && /*#__PURE__*/React.createElement(Route, {\n    path: \"/hompageen\",\n    element: /*#__PURE__*/React.createElement(HomePageEn, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 45\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), reduxIsLoggedIn && /*#__PURE__*/React.createElement(Route, {\n    path: \"/hompagekr\",\n    element: /*#__PURE__*/React.createElement(HomePageKr, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 45\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), reduxIsLoggedIn && /*#__PURE__*/React.createElement(Route, {\n    path: \"/updateusername\",\n    element: /*#__PURE__*/React.createElement(ChangeUserName, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 22\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), reduxIsLoggedIn && /*#__PURE__*/React.createElement(Route, {\n    path: \"/changepassword\",\n    element: /*#__PURE__*/React.createElement(ChangePassword, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 22\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/InterLogger Version2/src/App.js"],"names":["React","useEffect","Routes","Route","Navigate","Login","Layout","MessageLogEn","MessageLogKr","SignIn","ChangePassword","HomePageEn","HomePageKr","ChangeUserName","InitialPage","useSelector","useDispatch","usersActions","App","reduxIsLoggedIn","state","isLoggedIn","dispatch","storedToken","localStorage","getItem","storedIsLoggedIn","storedUser","updateIdToken","updateUser","updateIsLoggedIn"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport \"./App.css\";\nimport Login from \"./pages/Login\";\nimport Layout from \"./components/Layout/Layout\";\nimport MessageLogEn from \"./pages/MessageLogEn\";\nimport MessageLogKr from \"./pages/MessageLogKr\";\nimport SignIn from \"./pages/SignIn\";\nimport ChangePassword from \"./pages/ChangePassword\";\nimport HomePageEn from \"./pages/HomePageEn\";\nimport HomePageKr from \"./pages/HomePageKr\";\nimport ChangeUserName from \"./pages/ChangeUserName\";\nimport InitialPage from \"./pages/InitialPage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { usersActions } from \"./store/userSlice\";\n\nfunction App() {\n  const reduxIsLoggedIn = useSelector((state) => state.isLoggedIn);\n  const dispatch = useDispatch();\n  const storedToken = localStorage.getItem(\"token\");\n  const storedIsLoggedIn = localStorage.getItem(\"isLoggedIn\");\n  const storedUser = localStorage.getItem(\"user\");\n\n  useEffect(() => {\n    if (storedIsLoggedIn) {\n      dispatch(usersActions.updateIdToken(storedToken));\n      dispatch(usersActions.updateUser(storedUser));\n      dispatch(usersActions.updateIsLoggedIn(storedIsLoggedIn));\n    }\n  }, [storedToken, storedIsLoggedIn, storedUser]);\n\n  return (\n    <Layout>\n      <Routes>\n        {reduxIsLoggedIn ? (\n          <Route path=\"*\" element={<Navigate to=\"/initialpage\" />} />\n        ) : (\n          <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n        )}\n        <Route path=\"/login\" element={<Login></Login>} />\n        <Route path=\"/initialpage\" element={<InitialPage></InitialPage>} />\n        <Route path=\"/signin\" element={<SignIn></SignIn>} />)\n        {reduxIsLoggedIn && (\n          <Route path=\"/msglogen\" element={<MessageLogEn></MessageLogEn>} />\n        )}\n        {reduxIsLoggedIn && (\n          <Route path=\"/msglogkr\" element={<MessageLogKr></MessageLogKr>} />\n        )}\n        {reduxIsLoggedIn && (\n          <Route path=\"/hompageen\" element={<HomePageEn></HomePageEn>} />\n        )}\n        {reduxIsLoggedIn && (\n          <Route path=\"/hompagekr\" element={<HomePageKr></HomePageKr>} />\n        )}\n        {reduxIsLoggedIn && (\n          <Route\n            path=\"/updateusername\"\n            element={<ChangeUserName></ChangeUserName>}\n          />\n        )}\n        {reduxIsLoggedIn && (\n          <Route\n            path=\"/changepassword\"\n            element={<ChangePassword></ChangePassword>}\n          />\n        )}\n      </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}