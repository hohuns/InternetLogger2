{"ast":null,"code":"var _jsxFileName = \"/Users/sungjaejoo/Desktop/InterLogger Version2/src/components/MessageLogForm/MessageLogFormKr.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport AddNoteKr from \"./AddNoteKr\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport NoteListKr from \"./NoteListKr\";\n\nconst MessageLogFormKr = () => {\n  const reduxUser = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const [note, setNote] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  let navigate = useNavigate();\n\n  const logoutHandler = () => {\n    dispatch(usersActions.updateIdToken(null));\n    dispatch(usersActions.updateIsLoggedIn(false));\n    dispatch(usersActions.updateUser(null));\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"isLoggedIn\");\n    localStorage.removeItem(\"user\");\n    navigate(\"/login\");\n  };\n\n  const fetchNoteHandlerKr = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://react-http-2887f-default-rtdb.firebaseio.com/notes2.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      const loadedNotes = [];\n\n      for (const key in data) {\n        loadedNotes.push({\n          id: key,\n          title: data[key].title,\n          text: data[key].text,\n          date: `${data[key].logger}님이 ${data[key].date}에 남기셨습니다..`\n        });\n      }\n\n      loadedNotes.reverse();\n      console.log(loadedNotes);\n      setNote(loadedNotes);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n\n  async function addNoteHandlerKr(note) {\n    const response = await fetch(\"https://react-http-2887f-default-rtdb.firebaseio.com/notes2.json\", {\n      method: \"POST\",\n      body: JSON.stringify(note),\n      headers: {\n        \"Content-Type\": \"appication/json\"\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n    alert(`메세지가 성공적으로 추가되었습니다.`);\n    fetchNoteHandlerKr();\n  }\n\n  useEffect(() => {\n    fetchNoteHandlerKr();\n  }, [fetchNoteHandlerKr]);\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Found no Notes.\");\n\n  if (note.length > 0) {\n    content = /*#__PURE__*/React.createElement(NoteListKr, {\n      note: note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    });\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, error);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"\\uBC18\\uAC11\\uC2B5\\uB2C8\\uB2E4.. \", reduxUser, \"\\uB2D8.... \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: logoutHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \" Logout\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"\\uBA54\\uC138\\uC9C0 \\uC591\\uC2DD\"), /*#__PURE__*/React.createElement(AddNoteKr, {\n    AddNote: addNoteHandlerKr,\n    logger: reduxUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchNoteHandlerKr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"\\uBA54\\uC138\\uC9C0 \\uC5C5\\uB370\\uC774\\uD2B8\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"\\uBA54\\uC138\\uC9C0 \\uB85C\\uADF8\"), content));\n};\n\nexport default MessageLogFormKr;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/InterLogger Version2/src/components/MessageLogForm/MessageLogFormKr.js"],"names":["React","useState","useEffect","useCallback","AddNoteKr","useSelector","useDispatch","useNavigate","usersActions","NoteListKr","MessageLogFormKr","reduxUser","state","user","dispatch","note","setNote","error","setError","isLoading","setIsLoading","navigate","logoutHandler","updateIdToken","updateIsLoggedIn","updateUser","localStorage","removeItem","fetchNoteHandlerKr","response","fetch","ok","Error","data","json","loadedNotes","key","push","id","title","text","date","logger","reverse","console","log","message","addNoteHandlerKr","method","body","JSON","stringify","headers","alert","content","color","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport AddNoteKr from \"./AddNoteKr\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport NoteListKr from \"./NoteListKr\";\nconst MessageLogFormKr = () => {\n  const reduxUser = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const [note, setNote] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  let navigate = useNavigate();\n\n  const logoutHandler = () => {\n    dispatch(usersActions.updateIdToken(null));\n    dispatch(usersActions.updateIsLoggedIn(false));\n    dispatch(usersActions.updateUser(null));\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"isLoggedIn\");\n    localStorage.removeItem(\"user\");\n    navigate(\"/login\");\n  };\n\n  const fetchNoteHandlerKr = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://react-http-2887f-default-rtdb.firebaseio.com/notes2.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      const loadedNotes = [];\n      for (const key in data) {\n        loadedNotes.push({\n          id: key,\n          title: data[key].title,\n          text: data[key].text,\n          date: `${data[key].logger}님이 ${data[key].date}에 남기셨습니다..`,\n        });\n      }\n      loadedNotes.reverse();\n      console.log(loadedNotes);\n      setNote(loadedNotes);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  async function addNoteHandlerKr(note) {\n    const response = await fetch(\n      \"https://react-http-2887f-default-rtdb.firebaseio.com/notes2.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(note),\n        headers: {\n          \"Content-Type\": \"appication/json\",\n        },\n      }\n    );\n    const data = await response.json();\n    console.log(data);\n    alert(`메세지가 성공적으로 추가되었습니다.`);\n    fetchNoteHandlerKr();\n  }\n\n  useEffect(() => {\n    fetchNoteHandlerKr();\n  }, [fetchNoteHandlerKr]);\n\n  let content = <p style={{ color: \"white\" }}>Found no Notes.</p>;\n\n  if (note.length > 0) {\n    content = <NoteListKr note={note} />;\n  }\n\n  if (error) {\n    content = <p style={{ color: \"white\" }}>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p style={{ color: \"white\" }}>Loading...</p>;\n  }\n\n  return (\n    <div>\n      <section>\n        <h3 style={{ color: \"white\" }}>반갑습니다.. {reduxUser}님.... </h3>\n        <button onClick={logoutHandler}> Logout</button>\n      </section>\n      <section>\n        <h3 style={{ color: \"white\" }}>메세지 양식</h3>\n        <AddNoteKr AddNote={addNoteHandlerKr} logger={reduxUser}></AddNoteKr>\n      </section>\n      <section>\n        <button onClick={fetchNoteHandlerKr}>메세지 업데이트</button>\n      </section>\n      <section>\n        <h3 style={{ color: \"white\" }}>메세지 로그</h3>\n        {content}\n      </section>\n    </div>\n  );\n};\n\nexport default MessageLogFormKr;\n"]},"metadata":{},"sourceType":"module"}