{"ast":null,"code":"var _jsxFileName = \"/Users/sungjaejoo/Desktop/InterLogger Version2/src/components/UpdateProfileForm/UpdateProfileForm.js\";\nimport { Divider } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport React, { useRef } from \"react\";\nimport { logIn } from \"../../Service/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst UpdateProfileForm = props => {\n  const userRef = useRef(\"\");\n  let navigate = useNavigate();\n  const reduxidToken = useSelector(state => state.idToken);\n\n  const formHandler = async () => {\n    console.log(pwRef.current.value);\n\n    try {\n      const data = await fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          idToken: reduxidToken,\n          displayName: userRef.current.value,\n          photoUrl: null,\n          returnSecureToken: false\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      if (!data.ok) {\n        var _data$error;\n\n        console.log(data);\n        let errorMessage = \"Failed to change user name. \\n 사용자 이름 변경에 실패하였습니다.\";\n\n        if (data === null || data === void 0 ? void 0 : (_data$error = data.error) === null || _data$error === void 0 ? void 0 : _data$error.message) {\n          //equal with if(data && data.error && data.error.message)\n          errorMessage = data.error.message;\n        }\n\n        throw new Error(errorMessage);\n      }\n\n      const json = await data.json();\n      console.log(json);\n      alert(\"성공하였습니다.\");\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  console.log(reduxidToken);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Input the username that you want to change.\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"\\uBCC0\\uACBD\\uD560 \\uC0AC\\uC6A9\\uC790 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\"), /*#__PURE__*/React.createElement(Divider, {\n    sx: {\n      backgroundColor: \"white\",\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    required: true,\n    name: \"Username\",\n    sx: {\n      input: {\n        borderRadius: \"5px\",\n        border: \"1px solid white\",\n        color: \"white\"\n      }\n    },\n    label: \"Username\",\n    type: \"Username\",\n    fullWidth: true,\n    inputRef: userRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      marginTop: \"30px\"\n    },\n    onClick: formHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default UpdateProfileForm;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/InterLogger Version2/src/components/UpdateProfileForm/UpdateProfileForm.js"],"names":["Divider","TextField","Grid","Typography","React","useRef","logIn","useNavigate","usersActions","useSelector","useDispatch","UpdateProfileForm","props","userRef","navigate","reduxidToken","state","idToken","formHandler","console","log","pwRef","current","value","data","fetch","method","body","JSON","stringify","displayName","photoUrl","returnSecureToken","headers","ok","errorMessage","error","message","Error","json","alert","err","backgroundColor","marginTop","input","borderRadius","border","color"],"mappings":"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","sourcesContent":["import { Divider } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport React, { useRef } from \"react\";\nimport { logIn } from \"../../Service/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst UpdateProfileForm = (props) => {\n  const userRef = useRef(\"\");\n  let navigate = useNavigate();\n  const reduxidToken = useSelector((state) => state.idToken);\n\n  const formHandler = async () => {\n    console.log(pwRef.current.value);\n    try {\n      const data = await fetch(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            idToken: reduxidToken,\n            displayName: userRef.current.value,\n            photoUrl: null,\n            returnSecureToken: false,\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      if (!data.ok) {\n        console.log(data);\n        let errorMessage =\n          \"Failed to change user name. \\n 사용자 이름 변경에 실패하였습니다.\";\n        if (data?.error?.message) {\n          //equal with if(data && data.error && data.error.message)\n          errorMessage = data.error.message;\n        }\n        throw new Error(errorMessage);\n      }\n      const json = await data.json();\n      console.log(json);\n      alert(\"성공하였습니다.\");\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  console.log(reduxidToken);\n  return (\n    <section>\n      <Typography variant=\"h6\" color=\"white\">\n        Input the username that you want to change.\n      </Typography>\n      <Typography variant=\"h6\" color=\"white\">\n        변경할 사용자 이름을 입력해 주세요.\n      </Typography>\n      <Divider sx={{ backgroundColor: \"white\", marginTop: \"10px\" }} />\n      <Grid container spacing={4} style={{ marginTop: \"10px\" }}>\n        <Grid item xs={12} sm={3}>\n          {}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            margin=\"dense\"\n            required\n            name=\"Username\"\n            sx={{\n              input: {\n                borderRadius: \"5px\",\n                border: \"1px solid white\",\n                color: \"white\",\n              },\n            }}\n            label=\"Username\"\n            type=\"Username\"\n            fullWidth\n            inputRef={userRef}\n          />\n          <button style={{ marginTop: \"30px\" }} onClick={formHandler}>\n            Submit\n          </button>\n        </Grid>\n      </Grid>\n    </section>\n  );\n};\n\nexport default UpdateProfileForm;\n"]},"metadata":{},"sourceType":"module"}