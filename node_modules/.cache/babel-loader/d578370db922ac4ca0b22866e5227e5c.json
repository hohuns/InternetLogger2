{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  isAuth: false\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: initialState,\n  reducers: {\n    updateId(state, action) {\n      state.email = action.payload;\n    },\n\n    updatePassword(state, action) {\n      state.password = action.payload;\n    },\n\n    updateIsauth(state, action) {\n      state.isAuth = action.payload;\n    }\n\n  }\n}); //Create the store\n\nconst store = configureStore({\n  reducer: userSlice.reducer\n});\nexport const usersActions = userSlice.actions;\nexport default store;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/Protek/연습파일/Web/리액트/리액트 프로젝트/InterLogger/src/store/userSlice.js"],"names":["createSlice","configureStore","initialState","email","password","isAuth","userSlice","name","reducers","updateId","state","action","payload","updatePassword","updateIsauth","store","reducer","usersActions","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,MAAM,EAAE;AAHW,CAArB;AAMA,MAAMC,SAAS,GAAGN,WAAW,CAAC;AAC5BO,EAAAA,IAAI,EAAE,MADsB;AAE5BL,EAAAA,YAAY,EAAEA,YAFc;AAG5BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACtBD,MAAAA,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACC,OAArB;AACD,KAHO;;AAIRC,IAAAA,cAAc,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAC5BD,MAAAA,KAAK,CAACN,QAAN,GAAiBO,MAAM,CAACC,OAAxB;AACD,KANO;;AAORE,IAAAA,YAAY,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AAC1BD,MAAAA,KAAK,CAACL,MAAN,GAAeM,MAAM,CAACC,OAAtB;AACD;;AATO;AAHkB,CAAD,CAA7B,C,CAgBA;;AACA,MAAMG,KAAK,GAAGd,cAAc,CAAC;AAC3Be,EAAAA,OAAO,EAAEV,SAAS,CAACU;AADQ,CAAD,CAA5B;AAIA,OAAO,MAAMC,YAAY,GAAGX,SAAS,CAACY,OAA/B;AACP,eAAeH,KAAf","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  isAuth: false,\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: initialState,\n  reducers: {\n    updateId(state, action) {\n      state.email = action.payload;\n    },\n    updatePassword(state, action) {\n      state.password = action.payload;\n    },\n    updateIsauth(state, action) {\n      state.isAuth = action.payload;\n    },\n  },\n});\n\n//Create the store\nconst store = configureStore({\n  reducer: userSlice.reducer,\n});\n\nexport const usersActions = userSlice.actions;\nexport default store;\n"]},"metadata":{},"sourceType":"module"}