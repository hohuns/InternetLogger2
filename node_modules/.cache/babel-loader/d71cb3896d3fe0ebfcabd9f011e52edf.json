{"ast":null,"code":"var _jsxFileName = \"/Users/sungjaejoo/Desktop/InterLogger Version2/src/components/MessageLogForm/MessageLogFormEn.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { fetchNoteHandlerEn, fetchNoteHandlerKr, addNoteHandlerEn, addNoteHandlerKr } from \"../../Service/ApiService\";\nimport AddNoteEn from \"./AddNoteEn\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport NoteListEn from \"./NoteListEn\";\n\nconst MessageLogFormEn = () => {\n  const reduxUser = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const [note, setNote] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  let navigate = useNavigate();\n\n  const logoutHandler = () => {\n    dispatch(usersActions.updateIdToken(null));\n    dispatch(usersActions.updateIsLoggedIn(false));\n    dispatch(usersActions.updateUser(null));\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"isLoggedIn\");\n    localStorage.removeItem(\"user\");\n    navigate(\"/login\");\n  };\n\n  const fetchNoteHandlerEn = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://react-http-2887f-default-rtdb.firebaseio.com/notes.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      console.log(data);\n      const loadedNotes = [];\n\n      for (const key in data) {\n        loadedNotes.push({\n          id: key,\n          title: data[key].title,\n          text: data[key].text,\n          date: `${data[key].logger} logged message at ${data[key].date}....`\n        });\n      }\n\n      loadedNotes.reverse();\n      console.log(loadedNotes);\n      setNote(loadedNotes);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchNoteHandlerEn();\n  }, [fetchNoteHandlerEn]);\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Found no Notes.\");\n\n  if (note.length > 0) {\n    content = /*#__PURE__*/React.createElement(NoteListEn, {\n      note: note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    });\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, error);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Welcome..! \", reduxUser, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: logoutHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \" Logout\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Log Format\"), /*#__PURE__*/React.createElement(AddNoteEn, {\n    AddNote: fetchNoteHandlerEn,\n    logger: reduxUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchNoteHandlerEn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Update Notes\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Log\"), content));\n};\n\nexport default MessageLogFormEn;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/InterLogger Version2/src/components/MessageLogForm/MessageLogFormEn.js"],"names":["React","useState","useEffect","useCallback","fetchNoteHandlerEn","fetchNoteHandlerKr","addNoteHandlerEn","addNoteHandlerKr","AddNoteEn","useSelector","useDispatch","useNavigate","usersActions","NoteListEn","MessageLogFormEn","reduxUser","state","user","dispatch","note","setNote","error","setError","isLoading","setIsLoading","navigate","logoutHandler","updateIdToken","updateIsLoggedIn","updateUser","localStorage","removeItem","response","fetch","ok","Error","data","json","console","log","loadedNotes","key","push","id","title","text","date","logger","reverse","message","content","color","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport {\n  fetchNoteHandlerEn,\n  fetchNoteHandlerKr,\n  addNoteHandlerEn,\n  addNoteHandlerKr,\n} from \"../../Service/ApiService\";\nimport AddNoteEn from \"./AddNoteEn\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport NoteListEn from \"./NoteListEn\";\nconst MessageLogFormEn = () => {\n  const reduxUser = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const [note, setNote] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  let navigate = useNavigate();\n\n  const logoutHandler = () => {\n    dispatch(usersActions.updateIdToken(null));\n    dispatch(usersActions.updateIsLoggedIn(false));\n    dispatch(usersActions.updateUser(null));\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"isLoggedIn\");\n    localStorage.removeItem(\"user\");\n    navigate(\"/login\");\n  };\n\n  const fetchNoteHandlerEn = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://react-http-2887f-default-rtdb.firebaseio.com/notes.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      console.log(data);\n      const loadedNotes = [];\n      for (const key in data) {\n        loadedNotes.push({\n          id: key,\n          title: data[key].title,\n          text: data[key].text,\n          date: `${data[key].logger} logged message at ${data[key].date}....`,\n        });\n      }\n      loadedNotes.reverse();\n      console.log(loadedNotes);\n      setNote(loadedNotes);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchNoteHandlerEn();\n  }, [fetchNoteHandlerEn]);\n\n  let content = <p style={{ color: \"white\" }}>Found no Notes.</p>;\n\n  if (note.length > 0) {\n    content = <NoteListEn note={note} />;\n  }\n\n  if (error) {\n    content = <p style={{ color: \"white\" }}>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p style={{ color: \"white\" }}>Loading...</p>;\n  }\n\n  return (\n    <div>\n      <section>\n        <h3 style={{ color: \"white\" }}>Welcome..! {reduxUser} </h3>\n        <button onClick={logoutHandler}> Logout</button>\n      </section>\n      <section>\n        <h3 style={{ color: \"white\" }}>Log Format</h3>\n        <AddNoteEn AddNote={fetchNoteHandlerEn} logger={reduxUser}></AddNoteEn>\n      </section>\n      <section>\n        <button onClick={fetchNoteHandlerEn}>Update Notes</button>\n      </section>\n      <section>\n        <h3 style={{ color: \"white\" }}>Log</h3>\n        {content}\n      </section>\n    </div>\n  );\n};\n\nexport default MessageLogFormEn;\n"]},"metadata":{},"sourceType":"module"}