{"ast":null,"code":"const logIn = (enteredEmail, enteredPassword) => {\n  fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      email: enteredEmail,\n      password: enteredPassword,\n      returnSecureToken: true\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return res.json().then(data => {\n        var _data$error;\n\n        console.log(data);\n        let errorMessage = \"Authentication failed!\";\n\n        if (data === null || data === void 0 ? void 0 : (_data$error = data.error) === null || _data$error === void 0 ? void 0 : _data$error.message) {\n          //equal with if(data && data.error && data.error.message)\n          errorMessage = data.error.message;\n        }\n\n        throw new Error(errorMessage);\n      });\n    }\n  }).then(data => {\n    console.log(data);\n  }).catch(err => {\n    alert(err.message);\n  });\n};\n\nconst signIn = (enteredEmail, enteredPassword) => {\n  fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      email: enteredEmail,\n      password: enteredPassword,\n      returnSecureToken: true\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return res.json().then(data => {\n        var _data$error2;\n\n        console.log(data);\n        let errorMessage = \"Authentication failed!\";\n\n        if (data === null || data === void 0 ? void 0 : (_data$error2 = data.error) === null || _data$error2 === void 0 ? void 0 : _data$error2.message) {\n          //equal with if(data && data.error && data.error.message)\n          errorMessage = data.error.message;\n        }\n\n        throw new Error(errorMessage);\n      });\n    }\n  }).then(data => {\n    console.log(data);\n  }).catch(err => {\n    alert(err.message);\n  });\n};\n\nconst changePassword = enteredNewPassword => {\n  fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      // idToken: authCtx.token,\n      password: enteredNewPassword,\n      returnSecureToken: false\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return res.json().then(data => {\n        var _data$error3;\n\n        console.log(data);\n        let errorMessage = \"Failed to change password\";\n\n        if (data === null || data === void 0 ? void 0 : (_data$error3 = data.error) === null || _data$error3 === void 0 ? void 0 : _data$error3.message) {\n          //equal with if(data && data.error && data.error.message)\n          errorMessage = data.error.message;\n        }\n\n        throw new Error(errorMessage);\n      });\n    }\n  }).then(data => {\n    console.log(data);\n    alert(\"Success password..!\");\n  }).catch(err => {\n    alert(err.errorMessage);\n  });\n};\n\nexport { logIn, signIn, changePassword };","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/InterLogger Version2/src/Service/ApiService.js"],"names":["logIn","enteredEmail","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","console","log","errorMessage","error","message","Error","catch","err","alert","signIn","changePassword","enteredNewPassword"],"mappings":"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","sourcesContent":["const logIn = (enteredEmail, enteredPassword) => {\n  fetch(\n    \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\",\n    {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  )\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then((data) => {\n          console.log(data);\n          let errorMessage = \"Authentication failed!\";\n          if (data?.error?.message) {\n            //equal with if(data && data.error && data.error.message)\n            errorMessage = data.error.message;\n          }\n          throw new Error(errorMessage);\n        });\n      }\n    })\n    .then((data) => {\n      console.log(data);\n    })\n    .catch((err) => {\n      alert(err.message);\n    });\n};\n\nconst signIn = (enteredEmail, enteredPassword) => {\n  fetch(\n    \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\",\n    {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  )\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then((data) => {\n          console.log(data);\n          let errorMessage = \"Authentication failed!\";\n          if (data?.error?.message) {\n            //equal with if(data && data.error && data.error.message)\n            errorMessage = data.error.message;\n          }\n          throw new Error(errorMessage);\n        });\n      }\n    })\n    .then((data) => {\n      console.log(data);\n    })\n    .catch((err) => {\n      alert(err.message);\n    });\n};\n\nconst changePassword = (enteredNewPassword) => {\n  fetch(\n    \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\",\n    {\n      method: \"POST\",\n      body: JSON.stringify({\n        // idToken: authCtx.token,\n        password: enteredNewPassword,\n        returnSecureToken: false,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  )\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then((data) => {\n          console.log(data);\n          let errorMessage = \"Failed to change password\";\n          if (data?.error?.message) {\n            //equal with if(data && data.error && data.error.message)\n            errorMessage = data.error.message;\n          }\n          throw new Error(errorMessage);\n        });\n      }\n    })\n    .then((data) => {\n      console.log(data);\n      alert(\"Success password..!\");\n    })\n    .catch((err) => {\n      alert(err.errorMessage);\n    });\n};\n\nexport { logIn, signIn, changePassword };\n"]},"metadata":{},"sourceType":"module"}